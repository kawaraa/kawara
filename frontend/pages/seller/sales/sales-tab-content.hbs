module.exports = () => `

<style>
  .sales-header,
  .sale-item {
    display: flex;
    padding: 10px 0;
    border-bottom: 0.5px solid var(--blur);
    align-items: center;
    font-size: 16px;
  }

  .picture,
  .price,
  .shipping-cost,
  .quantity,
  .fee,
  .payout {
    width: 150px;
    display: flex;
  }

  .picture>img {
    width: 50px;
    max-height: 50px;
  }

  /* =============== Mobile, IPads & Tablet styles =============== */
  @media screen and (max-width: 850px) {

    .sales-header,
    .sale-item {
      padding: 5px 0;
      font-size: 12px;
    }

    .picture>img {
      width: 35px;
      max-height: 35px;
    }
  }
</style>

<section class="sales-tab-content sales">
  <h2>Sales</h2>
  <h4 class="sales-header">
    <span class="picture">Product</span>
    <span class="price">Price</span>
    <span class="shipping-cost">Shipping</span>
    <span class="quantity">Quantity</span>
    <span class="fee">Fee</span>
    <span class="payout">Payout</span>
  </h4>
  <ul class="sales-list">
    <li class="sale-item">
      <span class="picture"><img onclick="previewPicture(event)" /></span>
      <span class="price"></span>
      <span class="shipping-cost"></span>
      <span class="quantity"></span>
      <span class="fee"></span>
      <span class="payout"></span>
    </li>
  </ul>
</section>

<script>
  const salesList = query(".sales-list");
  const saleItemEl = salesList.children[0].cloneNode(true);
  salesList.innerHTML = "";

  async function renderSalesTabContent() {
    salesList.innerHTML = "";
    setLoading(true);
    const sales = await fetch("/api/seller/sales").then(res => res.json()).catch(networkError);
    setLoading(false);
    if (sales.error) return showErrorMessage(sales.error);

    sales.forEach(sale => {
      const saleItem = saleItemEl.cloneNode(true);
      saleItem.querySelector(".picture>img").src = sale.picture;
      saleItem.querySelector(".price").innerText = priceToString(sale.price);
      saleItem.querySelector(".shipping-cost").innerText = priceToString(sale.shippingCost);
      saleItem.querySelector(".quantity").innerText = sale.quantity;
      saleItem.querySelector(".fee").innerText = priceToString(sale.fee);
      saleItem.querySelector(".payout").innerText = priceToString(sale.payout);
      salesList.appendChild(saleItem);
    });
  }
</script>

`